var Transformation, copyStack, emptyStack;

emptyStack = function() {
  var a;
  a = new Float32Array(20);
  a[3] = 1;
  a[4] = 1;
  a[5] = 1;
  a[6] = 10000;
  a.movement = a.subarray(0, 3);
  a.scale = a.subarray(3, 6);
  a.rotation = a.subarray(7, 10);
  a.localMovement = a.subarray(10, 13);
  a.localRotation = a.subarray(13, 16);
  a.rotate3d = a.subarray(16, 20);
  return a;
};

copyStack = function(from, to) {
  to.set(from);
};

module.exports = Transformation = (function() {
  Transformation._emptyStack = emptyStack;

  function Transformation() {
    this._main = emptyStack();
    this._temp = emptyStack();
    this._current = this._main;
    this._has = {
      movement: false,
      perspective: false,
      rotation: false,
      rotate3d: false,
      scale: false,
      localMovement: false,
      localRotation: false
    };
    this._tempMode = false;
  }

  Transformation.prototype.temporarily = function() {
    copyStack(this._main, this._temp);
    this._current = this._temp;
    this._tempMode = true;
    return this;
  };

  Transformation.prototype.commit = function() {
    if (this._tempMode) {
      copyStack(this._temp, this._main);
      this._current = this._main;
      this._tempMode = false;
    }
    return this;
  };

  Transformation.prototype.rollBack = function() {
    if (this._tempMode) {
      this._current = this._main;
      this._tempMode = false;
    }
    return this;
  };


  /*
  	Movement
   */

  Transformation.prototype.resetMovement = function() {
    this._has.movement = false;
    this._current[0] = 0;
    this._current[1] = 0;
    this._current[2] = 0;
    return this;
  };

  Transformation.prototype.getMovement = function() {
    return this._current.movement;
  };

  Transformation.prototype.moveTo = function(x, y, z) {
    this._has.movement = true;
    this._current[0] = x;
    this._current[1] = y;
    this._current[2] = z;
    return this;
  };

  Transformation.prototype.moveXTo = function(x) {
    this._has.movement = true;
    this._current[0] = x;
    return this;
  };

  Transformation.prototype.moveYTo = function(y) {
    this._has.movement = true;
    this._current[1] = y;
    return this;
  };

  Transformation.prototype.moveZTo = function(z) {
    this._has.movement = true;
    this._current[2] = z;
    return this;
  };

  Transformation.prototype.move = function(x, y, z) {
    this._has.movement = true;
    this._current[0] += x;
    this._current[1] += y;
    this._current[2] += z;
    return this;
  };

  Transformation.prototype.moveX = function(x) {
    this._has.movement = true;
    this._current[0] += x;
    return this;
  };

  Transformation.prototype.moveY = function(y) {
    this._has.movement = true;
    this._current[1] += y;
    return this;
  };

  Transformation.prototype.moveZ = function(z) {
    this._has.movement = true;
    this._current[2] += z;
    return this;
  };


  /*
  	Scale
   */

  Transformation.prototype.resetScale = function() {
    this._has.scale = false;
    this._current[3] = 1;
    this._current[4] = 1;
    this._current[5] = 1;
    return this;
  };

  Transformation.prototype.getScale = function() {
    return this._current.scale;
  };

  Transformation.prototype.scaleTo = function(x, y, z) {
    this._has.scale = true;
    this._current[3] = x;
    this._current[4] = y;
    this._current[5] = z;
    return this;
  };

  Transformation.prototype.scaleXTo = function(x) {
    this._has.scale = true;
    this._current[3] = x;
    return this;
  };

  Transformation.prototype.scaleYTo = function(y) {
    this._has.scale = true;
    this._current[4] = y;
    return this;
  };

  Transformation.prototype.scaleZTo = function(z) {
    this._has.scale = true;
    this._current[5] = z;
    return this;
  };

  Transformation.prototype.scale = function(x, y, z) {
    this._has.scale = true;
    this._current[3] *= x;
    this._current[4] *= y;
    this._current[5] *= z;
    return this;
  };

  Transformation.prototype.scaleAllTo = function(x) {
    if (x === 1) {
      this._has.scale = false;
    } else {
      this._has.scale = true;
    }
    this._current[3] = this._current[4] = this._current[5] = x;
    return this;
  };

  Transformation.prototype.scaleX = function(x) {
    this._has.scale = true;
    this._current[3] *= x;
    return this;
  };

  Transformation.prototype.scaleY = function(y) {
    this._has.scale = true;
    this._current[4] *= y;
    return this;
  };

  Transformation.prototype.scaleZ = function(z) {
    this._has.scale = true;
    this._current[5] *= z;
    return this;
  };


  /*
  	Perspective
   */

  Transformation.prototype.resetPerspective = function() {
    this._current[6] = 0;
    this._has.perspective = false;
    return this;
  };

  Transformation.prototype.perspective = function(d) {
    this._current[6] = d;
    if (d) {
      this._has.perspective = true;
    }
    return this;
  };

  Transformation.prototype.getPerspective = function() {
    return this._current[6];
  };


  /*
  	Rotation
   */

  Transformation.prototype.resetRotation = function() {
    this._has.rotation = false;
    this._current[7] = 0;
    this._current[8] = 0;
    this._current[9] = 0;
    return this;
  };

  Transformation.prototype.getRotation = function() {
    return this._current.rotation;
  };

  Transformation.prototype.rotateTo = function(x, y, z) {
    this._has.rotation = true;
    this._current[7] = x;
    this._current[8] = y;
    this._current[9] = z;
    return this;
  };

  Transformation.prototype.rotateXTo = function(x) {
    this._has.rotation = true;
    this._current[7] = x;
    return this;
  };

  Transformation.prototype.rotateYTo = function(y) {
    this._has.rotation = true;
    this._current[8] = y;
    return this;
  };

  Transformation.prototype.rotateZTo = function(z) {
    this._has.rotation = true;
    this._current[9] = z;
    return this;
  };

  Transformation.prototype.rotate = function(x, y, z) {
    this._has.rotation = true;
    this._current[7] += x;
    this._current[8] += y;
    this._current[9] += z;
    return this;
  };

  Transformation.prototype.rotateX = function(x) {
    this._has.rotation = true;
    this._current[7] += x;
    return this;
  };

  Transformation.prototype.rotateY = function(y) {
    this._has.rotation = true;
    this._current[8] += y;
    return this;
  };

  Transformation.prototype.rotateZ = function(z) {
    this._has.rotation = true;
    this._current[9] += z;
    return this;
  };


  /*
  	rotate3d
   */

  Transformation.prototype.rotate3d = function(x, y, z, amount) {
    this._has.rotate3d = true;
    this._current[16] = x;
    this._current[17] = y;
    this._current[18] = z;
    this._current[19] = amount;
    return this;
  };

  Transformation.prototype.getRotate3d = function() {
    return this._current.rotate3d;
  };


  /*
  	Local Movement
   */

  Transformation.prototype.resetLocalMovement = function() {
    this._has.localMovement = false;
    this._current[10] = 0;
    this._current[11] = 0;
    this._current[12] = 0;
    return this;
  };

  Transformation.prototype.getLocalMovement = function() {
    return this._current.localMovement;
  };

  Transformation.prototype.localMoveTo = function(x, y, z) {
    this._has.localMovement = true;
    this._current[10] = x;
    this._current[11] = y;
    this._current[12] = z;
    return this;
  };

  Transformation.prototype.localMoveXTo = function(x) {
    this._has.localMovement = true;
    this._current[10] = x;
    return this;
  };

  Transformation.prototype.localMoveYTo = function(y) {
    this._has.localMovement = true;
    this._current[11] = y;
    return this;
  };

  Transformation.prototype.localMoveZTo = function(z) {
    this._has.localMovement = true;
    this._current[12] = z;
    return this;
  };

  Transformation.prototype.localMove = function(x, y, z) {
    this._has.localMovement = true;
    this._current[10] += x;
    this._current[11] += y;
    this._current[12] += z;
    return this;
  };

  Transformation.prototype.localMoveX = function(x) {
    this._has.localMovement = true;
    this._current[10] += x;
    return this;
  };

  Transformation.prototype.localMoveY = function(y) {
    this._has.localMovement = true;
    this._current[11] += y;
    return this;
  };

  Transformation.prototype.localMoveZ = function(z) {
    this._has.localMovement = true;
    this._current[12] += z;
    return this;
  };


  /*
  	Local Rotation
   */

  Transformation.prototype.resetLocalRotation = function() {
    this._has.localRotation = false;
    this._current[13] = 0;
    this._current[14] = 0;
    this._current[15] = 0;
    return this;
  };

  Transformation.prototype.getLocalRotation = function() {
    return this._current.localRotation;
  };

  Transformation.prototype.localRotateTo = function(x, y, z) {
    this._has.localRotation = true;
    this._current[13] = x;
    this._current[14] = y;
    this._current[15] = z;
    return this;
  };

  Transformation.prototype.localRotateXTo = function(x) {
    this._has.localRotation = true;
    this._current[13] = x;
    return this;
  };

  Transformation.prototype.localRotateYTo = function(y) {
    this._has.localRotation = true;
    this._current[14] = y;
    return this;
  };

  Transformation.prototype.localRotateZTo = function(z) {
    this._has.localRotation = true;
    this._current[15] = z;
    return this;
  };

  Transformation.prototype.localRotate = function(x, y, z) {
    this._has.localRotation = true;
    this._current[13] += x;
    this._current[14] += y;
    this._current[15] += z;
    return this;
  };

  Transformation.prototype.localRotateX = function(x) {
    this._has.localRotation = true;
    this._current[13] += x;
    return this;
  };

  Transformation.prototype.localRotateY = function(y) {
    this._has.localRotation = true;
    this._current[14] += y;
    return this;
  };

  Transformation.prototype.localRotateZ = function(z) {
    this._has.localRotation = true;
    this._current[15] += z;
    return this;
  };

  Transformation.prototype.resetAll = function() {
    this.resetMovement();
    this.resetScale();
    this.resetPerspective();
    this.resetRotation();
    this.resetLocalMovement();
    return this.resetLocalRotation();
  };

  return Transformation;

})();

//# sourceMappingURL=data:application/json;base64,